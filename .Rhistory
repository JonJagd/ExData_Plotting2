dev.off()
## -----------------------------------------------------------------------------------
## Course     : Exploratory Data Analysis
## Assignment : Peer-graded Assignment: Course Project 2 - week 4
## Developer  : Jon Jagd Christensen (December 2016)
## Code       : plot1
## Question   : Have total emissions from PM2.5 decreased in the United States from 1999
## to 2008? Using the base plotting system, make a plot showing the total PM2.5 emission
## from all sources for each  of the years 1999, 2002, 2005, and 2008.
## -----------------------------------------------------------------------------------
## This program will load data from the following two sources:
##
## PM2.5 Emissions Data (summarySCC_PM25.rds): This file contains a data frame with all
## of the PM2.5 emissions data for 1999, 2002, 2005, and 2008
##
## Source Classification Code Table (Source_Classification_Code.rds): This table
## provides a mapping from the SCC digit strings in the Emissions table to the actual
## name of the PM2.5 source.
##
##
##
##
## -----------------------------------------------------------------------------------
## Prepare the environment
## -----------------------------------------------------------------------------------
# Clear the memory
rm(list=ls())
# Set working directory
setwd("C:/Git/R/ExData_Plotting2")
## -----------------------------------------------------------------------------------
## Load data into the program
## -----------------------------------------------------------------------------------
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting into a data
## -----------------------------------------------------------------------------------
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
str(total)
## -----------------------------------------------------------------------------------
## Making the plot
## -----------------------------------------------------------------------------------
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot
png("/plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009))
##abline(h =median(total$total, na.rm = T)) ## adding a median trendline to the PM2.5 values
dev.off()
rm(list=ls())
# Set working directory
setwd("C:/Git/R/ExData_Plotting2")
## -----------------------------------------------------------------------------------
## Load data into the program
## -----------------------------------------------------------------------------------
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
str(total)
par(mfrow = c(1, 1))
## We create the plot
png("/plot1.png", width = 480, height = 480, res = 72)
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009))
##abline(h =median(total$total, na.rm = T)) ## adding a median trendline to the PM2.5 values
dev.off()
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19)
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19)
##abline(h =median(total$total, na.rm = T)) ## adding a median trendline to the PM2.5 values
dev.off()
?plot
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year")
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "Total PM2.5 emissions")
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "Amount of PM2.5 emitted, in tons")
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
model <- lm(row.names(total) ~ total$total, data = total)
abline(model, col = "red")
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
model <- lm(total$total ~ row.names(total), data = total)
total$total
row.names(total)
model <- lm(total ~ row.names(total), data = total)
abline(model, col = "red")
model
summary(model)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
model <- lm(total ~ row.names(total), data = total)
abline(model, col = "red")
?lm
plot(row.names(total), total$total, pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
model <- ?lm(total ~ row.names(total), data = total)
abline(model, col = "red")
plot(row.names(total), total$total, pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
model <- lm(total ~ row.names(total), data = total)
abline(model, col = "red")
?abline
require(stats)
sale5 <- c(6, 4, 9, 7, 6, 12, 8, 10, 9, 13)
plot(sale5)
abline(lsfit(1:10, sale5))
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4), total)
plot(row.names(total), total$total,  pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4), total)
abline(lsfit(1:4), total$total)
plot(row.names(total), total$total,  pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4), total$total)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4), total$total)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4, total$total)
)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4, total$total))
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4, total$total))
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4, total))
abline(lsfit(1:4, total))
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
abline(lsfit(1:4, total))
total
lsfit(1:4, total)
names(lsfit(1:4, total))
abline(lsfit(1:4, total), col = 4)
?lsfit
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
totalBC <- subset.data.frame(NEI, NEI$fips == 24510)
str(total)
str(totalBC)
totalBC <- subset.data.frame(NEI, NEI$fips == 24510)
totalBC <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
totalBC <- as.data.frame(total, col.names = names(total))
str(totalBC)
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot2.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
total
totalBC <- subset.data.frame(NEI, NEI$fips == 24510)
totalBC <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
totalBC <- as.data.frame(total, col.names = names(total))
totalBC
totalBC <- subset.data.frame(NEI, NEI$fips == 24510)
totalBC <-with(totalBC, tapply(Emissions, year, sum, na.rm = T))
totalBC <- as.data.frame(total, col.names = names(total))
totalBC
totalBC <- subset.data.frame(NEI, NEI$fips == "24510")
totalBC <-with(totalBC, tapply(Emissions, year, sum, na.rm = T))
totalBC <- as.data.frame(total, col.names = names(total))
totalBC
str(NEI)
totalBC <- subset.data.frame(NEI, NEI$fips == "24510")
totalBC
totalBC <- subset.data.frame(NEI, NEI$fips == "24510")
totalBC <-with(totalBC, tapply(Emissions, year, sum, na.rm = T))
totalBC <- as.data.frame(totalBC, col.names = names(total))
totalBC
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot2.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
plot(row.names(totalBC), totalBC$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot2.png", width = 480, height = 480, res = 72)
plot(row.names(totalBC), totalBC$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
## -----------------------------------------------------------------------------------
## Subsetting the date to Baltimore City
## -----------------------------------------------------------------------------------
total <- subset.data.frame(NEI, NEI$fips == "24510")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting it into a data frame
## -----------------------------------------------------------------------------------
total <-with(total, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
## -----------------------------------------------------------------------------------
## Making the plot
## -----------------------------------------------------------------------------------
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot2.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
## -----------------------------------------------------------------------------------
## Course     : Exploratory Data Analysis
## Assignment : Peer-graded Assignment: Course Project 2 - week 4
## Developer  : Jon Jagd Christensen (December 2016)
## Code       : plot1
## Question   : Have total emissions from PM2.5 decreased in the United States from 1999
## to 2008? Using the base plotting system, make a plot showing the total PM2.5 emission
## from all sources for each  of the years 1999, 2002, 2005, and 2008.
## -----------------------------------------------------------------------------------
## This program will load data from the following two sources:
##
## PM2.5 Emissions Data (summarySCC_PM25.rds): This file contains a data frame with all
## of the PM2.5 emissions data for 1999, 2002, 2005, and 2008
##
## Source Classification Code Table (Source_Classification_Code.rds): This table
## provides a mapping from the SCC digit strings in the Emissions table to the actual
## name of the PM2.5 source.
##
##
##
##
## -----------------------------------------------------------------------------------
## Prepare the environment
## -----------------------------------------------------------------------------------
# Clear the memory
rm(list=ls())
# Set working directory
setwd("C:/Git/R/ExData_Plotting2")
## -----------------------------------------------------------------------------------
## Load data into the program
## -----------------------------------------------------------------------------------
NEI <- readRDS("data/summarySCC_PM25.rds")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting it into a data frame
## -----------------------------------------------------------------------------------
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
## -----------------------------------------------------------------------------------
## Making the plot
## -----------------------------------------------------------------------------------
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
## -----------------------------------------------------------------------------------
## Course     : Exploratory Data Analysis
## Assignment : Peer-graded Assignment: Course Project 2 - week 4
## Developer  : Jon Jagd Christensen (December 2016)
## Code       : plot2
## Question   : Have total emissions from PM2.5 decreased in the  Baltimore City, Maryland
## ( fips == 24510) from 1999 to 2008? Use the base plotting system to make a plot answering
## this question.
## -----------------------------------------------------------------------------------
## This program will load data from the following two sources:
##
## PM2.5 Emissions Data (summarySCC_PM25.rds): This file contains a data frame with all
## of the PM2.5 emissions data for 1999, 2002, 2005, and 2008
##
## Source Classification Code Table (Source_Classification_Code.rds): This table
## provides a mapping from the SCC digit strings in the Emissions table to the actual
## name of the PM2.5 source.
##
##
## -----------------------------------------------------------------------------------
## Prepare the environment
## -----------------------------------------------------------------------------------
# Clear the memory
rm(list=ls())
# Set working directory
setwd("C:/Git/R/ExData_Plotting2")
## -----------------------------------------------------------------------------------
## Load data into the program
## -----------------------------------------------------------------------------------
NEI <- readRDS("data/summarySCC_PM25.rds")
## -----------------------------------------------------------------------------------
## Subsetting the date to Baltimore City
## -----------------------------------------------------------------------------------
total <- subset.data.frame(NEI, NEI$fips == "24510")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting it into a data frame
## -----------------------------------------------------------------------------------
total <-with(total, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
## -----------------------------------------------------------------------------------
## Making the plot
## -----------------------------------------------------------------------------------
## Setting the graphical parameters
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot2.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
?lm()
?abline()
require(stats)
sale5 <- c(6, 4, 9, 7, 6, 12, 8, 10, 9, 13)
plot(sale5)
abline(lsfit(1:10, sale5))
abline(lsfit(1:10, sale5, intercept = FALSE), col = 4) # less fitting
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
total
sale5 <- c(6, 4, 9, 7, 6, 12, 8, 10, 9, 13)
plot(sale5)
class(sale5)
1:10
abline(lsfit(1:10, sale5))
class(total)
class(total$total)
num <- total$total
num
total[1,]
total[,1]
## Read the data file
pm0 <- read.table("RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
setwd("C:/Git/R/Data/ExploratoryDataAnalysis")
## Read the data file
pm0 <- read.table("RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
## We pull out the pm2.5-value
x0 <- pm0$Sample.Value
class(x0)
str(x0)
summary(x0)
## Read in the first line from the data file to use as header
cnames <- readLines("RD_501_88101_1999-0.txt", 1)
## Split up the headers, Strplit returns a list
cnames <- strsplit(cnames, "|", fixed = TRUE)
## We only want the first element of the list as the header
names(pm0) <- cnames[[1]]
## The headers now contains spaces and therefore are not valid headers
## Therefore we use make.names() to create valid headers
names(pm0) <- make.names(cnames[[1]])
x0 <- pm0$Sample.Value
class(x0)
x0
class(pm0)
class(total)
total$total
num <- total$total
num
years <- names(total)
years
total
names(total)
row.names(total)
years <- row.names(total)
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total
names(total)
total
class(years)
years
total <- as.data.frame(total, col.names = names(total))
totVals <- total$total
totVals
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
##total <- as.data.frame(total, col.names = names(total))
years <- row.names(total)
totVals <- total$total
total
years <- row.names(total)
years
totVals <- total
totVals
class(total)
totVals <- total[,,1]
total[,,1]
total[1,,]
total[1,1,1]
total[1,]
total[1,]
str(total)
total[1:4]
total[1:4(1d)]
class(pm0)
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total
-------------------------------
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
##total <- as.data.frame(total, col.names = names(total))
## Now we want to create a dataframe that contains these values for every state
total <- data.frame(Year = names(total), total = total)
names(total)
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- data.frame(Year = names(total), mean = total)
total
total <- data.frame(Year = names(total), sum = total)
total
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
##total <- as.data.frame(total, col.names = names(total))
## Now we want to create a dataframe that contains these values for every state
total <- data.frame(Year = names(total), sum = total)
total
names(total)
years <- total$Year
years
str(years)
class(years)
totVals <- total$sum
totVals
str(totVals)
class(totVals)
class(total)
total[,2]
total[,3]
total[,1]
total[1,1]
total[1,]
names(total)
row.names(total)
totVals[1,1,1]
total
total <- data.frame(Year = names(total), sum = total, row.names = NULL)
total
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
## Now we want to create a dataframe that contains these values for every state
total <- data.frame(Year = names(total), sum = total, row.names = NULL)
total
totVals <- total$sum
totVals
years <- total$Year
totVals <- total$sum
years
total
class(total)
str(total)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
## Now we want to create a dataframe that contains these values for every state
total <- data.frame(Year = names(total), sum = total, row.names = NULL)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
plot(total$Year, total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
plot(total$Year, total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
total$total
total <- data.frame(Year = names(total), sum = total, row.names = NULL)
total
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
## Now we want to create a dataframe that contains these values for every state
total <- data.frame(Year = names(total), sum = total, row.names = NULL)
total
total$Year
total$total
total$sum
plot(total$Year, total$sum, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
total$Year
total$sum
total
total$Year
total$sum
total <- subset.data.frame(NEI, NEI$fips == "24510")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting it into a data frame
## -----------------------------------------------------------------------------------
total <-with(total, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
## -----------------------------------------------------------------------------------
## Making the plot
## -----------------------------------------------------------------------------------
## Setting the graphical parameters
par(mfrow = c(1, 1))
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
plot(row.names(total), total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 2 - Total PM2.5 emissions per year in Baltimore City", xlab = "Year", ylab = "PM2.5 in tons")
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
# Clear the memory
rm(list=ls())
# Set working directory
setwd("C:/Git/R/ExData_Plotting2")
## -----------------------------------------------------------------------------------
## Load data into the program
## -----------------------------------------------------------------------------------
NEI <- readRDS("data/summarySCC_PM25.rds")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting it into a data frame
## -----------------------------------------------------------------------------------
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
par(mfrow = c(1, 1))
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
setwd("C:/Git/R/ExData_Plotting2")
## -----------------------------------------------------------------------------------
## Load data into the program
## -----------------------------------------------------------------------------------
NEI <- readRDS("data/summarySCC_PM25.rds")
## -----------------------------------------------------------------------------------
## Summing up total emissions by year and putting into a data frame
## -----------------------------------------------------------------------------------
total <-with(NEI, tapply(Emissions, year, sum, na.rm = T))
total <- as.data.frame(total, col.names = names(total))
par(mfrow = c(1, 1))
## We create the plot and save it to a PNG-file
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
png("plot1.png", width = 480, height = 480, res = 72)
plot(row.names(total), total$total, xlim = c(1998, 2009), pch = 19, main = "Plot 1 - Total PM2.5 emissions per year", xlab = "Year", ylab = "PM2.5 in tons")
dev.off()
